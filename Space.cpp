/**************************************************************************
 * Program: Homeward Bound
 * Author: Andrew Derringer
**************************************************************************/

#include "Space.hpp"

#include <iostream>



/**************************************************************************
 * Passed:
 * Returns:
 * Description:
**************************************************************************/
Space::Space(Space* inUp, Space* inRight, Space* inDown, Space* inLeft)
{
     doggo = nullptr;
     //spaceEvent = nullptr;
     home = false;
     eventNum = 0;

     up = inUp;
     right = inRight;
     down = inDown;
     left = inLeft;

     spaceType = "Empty";
     impedence = 0;
     food = 0;
     maxFood = 0;
     restock = 0;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Space::~Space() {}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Player* Space::getPlayer()
{
     return doggo;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setPlayer(Player* inPlayer)
{
     doggo = inPlayer;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
/*Event* Space::getEvent()
{
     return spaceEvent;
}
*/


/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
/*void Space::setEvent(Event* inEvent)
{
     spaceEvent = inEvent;
}
*/


/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
/*void Space::playEvent()
{
     // print message for user and adjust game stats as needed.
}
*/


/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
int Space::getImpedence()
{
     return impedence;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
int Space::getFood()
{
     return food;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setFood(int inFood)
{
     food = inFood;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::restoreFood()
{
     if(food < maxFood)
     {
          restock++;
     }

     if(restock == 3)
     {
          food++;
          restock = 0;
     }
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
int Space::getMaxFood()
{
     return maxFood;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::makeHome()
{
     home = true;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
bool Space::isHome()
{
     return home;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setUp(Space* inSpace)
{
     up = inSpace;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Space* Space::getUp()
{
     return up;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setRight(Space* inSpace)
{
     right = inSpace;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Space* Space::getRight()
{
     return right;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setDown(Space* inSpace)
{
     down = inSpace;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Space* Space::getDown()
{
     return down;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::setLeft(Space* inSpace)
{
     left = inSpace;
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
Space* Space::getLeft()
{
     return left;
}



/**************************************************************************
 * Passed:
 * Returns:
 * Description:
**************************************************************************/
void Space::printHeader()
{
     std::cout << "+----+";
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::printType()
{
     std::cout << "| " << spaceType << impedence << " |";
}



/**************************************************************************
 * Passed
 * Returns:
 * Description:
**************************************************************************/
void Space::printKibble()
{
     std::cout << "| " << "K" << food << " |";
}



/**************************************************************************
 * Passed:
 * Returns:
 * Description:
**************************************************************************/
void Space::printSpacer()
{
     std::cout << "|    |";
}



/**************************************************************************
 * Passed:
 * Returns:
 * Description:
**************************************************************************/
void Space::setEvent(int inputEvent)
{
     eventNum = inputEvent;
}



/**************************************************************************
 * Passed:
 * Returns:
 * Description:
**************************************************************************/
int Space::getEvent()
{
     return eventNum;
}

